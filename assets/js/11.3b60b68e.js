(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{399:function(s,a,t){"use strict";t.r(a);var e=t(52),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"本地部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#本地部署"}},[s._v("#")]),s._v(" 本地部署")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("本教程将默认你会使用Git、Python、Linux等工具~"),t("br"),s._v("\n🖐️会者不难"),t("br"),s._v("\n使用Python 版本不低于"),t("strong",[s._v("3.6")])])]),s._v(" "),t("h2",{attrs:{id:"_1-1-克隆本项目至本地并进入目录"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-克隆本项目至本地并进入目录"}},[s._v("#")]),s._v(" 1.1 克隆本项目至本地并进入目录")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/XiaoMiku01/bili-live-heart.git\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" bili-live-heart\n")])])]),t("h2",{attrs:{id:"_1-2-安装所需模块"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-安装所需模块"}},[s._v("#")]),s._v(" 1.2 安装所需模块")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("pip "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -r requirements.txt\n")])])]),t("h2",{attrs:{id:"_1-3-配置用户信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-配置用户信息"}},[s._v("#")]),s._v(" 1.3 配置用户信息")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" user.toml\n")])])]),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('[[users]] # 账号1\n# B站cookie(不要忘记双引号)\ncookie = ""\n# 需要自动打卡主播uid(不是房间号！是UID! 如果为0则只进行签到不赠送小心心 只能填一个)\nruid = 0\n\n[[users]] # 账号2\ncookie =""\nruid = 0\n\n# 多账号请以相同格式添加\n\n[cron] # Cron 表达式(五位数）\ncron = ""\n\n[serverchan] # Server酱sendkey(微信推送，选填)\nsendkey = ""\n')])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("cron 默认为 0 0 * * * 即每天0点0分运行"),t("br"),s._v("\n补充：五位数Cron表达式，第一位表示分，第二位表示时，后三位本项目用不到不解释，例如："),t("br"),s._v(" "),t("code",[s._v("10 0 * * *")]),s._v(" 表示每天0点10分运行"),t("br"),s._v(" "),t("code",[s._v("30 8 * * *")]),s._v(" 表示每天8点30分运行"),t("br"),s._v(" "),t("code",[s._v("50 20 * * *")]),s._v(" 表示每天20点50分运行")])]),s._v(" "),t("h2",{attrs:{id:"_1-4-运行脚本文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-运行脚本文件"}},[s._v("#")]),s._v(" 1.4 运行脚本文件")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[s._v("python3 index.py\n")])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("本项目内置定时模块，并且默认在首次运行时执行一次，之后只需程序后台保持运行即可，可以使用screen tmux 等工具保持后台运行")])]),s._v(" "),t("h2",{attrs:{id:"_1-5-本地更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-本地更新"}},[s._v("#")]),s._v(" 1.5 本地更新")]),s._v(" "),t("p",[s._v("本地更新：命令行直接运行命令拉取最新仓库即可")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("git fetch origin master //从远程主机的master分支拉取最新内容 \ngit merge FETCH_HEAD    //将拉取下来的最新内容合并到当前所在的分支中\n")])])]),t("h1",{attrs:{id:"docker"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" Docker")]),s._v(" "),t("h2",{attrs:{id:"_2-1-拉取docker镜像至本地"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-拉取docker镜像至本地"}},[s._v("#")]),s._v(" 2.1 拉取Docker镜像至本地")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull xiaomiku01/bili-live-heart\n")])])]),t("h2",{attrs:{id:"_2-2-配置用户信息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-配置用户信息"}},[s._v("#")]),s._v(" 2.2 配置用户信息")]),s._v(" "),t("p",[s._v("创建文件env.list，具体内容参考本地部署的部分")]),s._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('# B站cookie\nCOOKIE=""\n# 需要自动打卡主播uid\nRUID=0\n# Cron 表达式\nCRON="0 0 * * *"\n# Server酱sendkey，选填\nSERVER_CHAN_SENDKEY=""\n')])])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("提示")]),s._v(" "),t("p",[s._v("在docker模式下不支持多用户，可以通过并行启动多个容器来达到多用户的目的")])]),s._v(" "),t("h2",{attrs:{id:"_2-3-创建并运行容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-创建并运行容器"}},[s._v("#")]),s._v(" 2.3 创建并运行容器")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -name bili-live-heart1 --env-file env.list xiaomiku01/bili-live-heart\n")])])]),t("p",[s._v("如果不希望创建env.list文件，此处也可以把用户配置直接写在命令里")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -name bili-live-heart1 -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("COOKIE")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("RUID")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CRON")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0 0 * * *"')]),s._v(" -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SERVER_CHAN_SENDKEY")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" xiaomiku01/bili-live-heart\n")])])]),t("h2",{attrs:{id:"_2-4-本地更新"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-本地更新"}},[s._v("#")]),s._v(" 2.4 本地更新")]),s._v(" "),t("p",[s._v("docker本身没有更新机制，更新容器需要停止并删除容器，重新拉取镜像并重建容器")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" stop bili-live-heart1\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" bili-live-heart1\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" pull xiaomiku01/bili-live-heart\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -name bili-live-heart1 --env-file env.list xiaomiku01/bili-live-heart\n")])])]),t("p",[s._v("不过这里也可以讨个巧，在docker运行中进入容器中通过git更新代码，然后重启容器，虽然也比较麻烦，但似乎要好一点")]),s._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" -it -w /app/bili-live-heart bili-live-heart1 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" pull\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" restart bili-live-heart1\n")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);